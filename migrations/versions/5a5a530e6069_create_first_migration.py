"""create first migration

Revision ID: 5a5a530e6069
Revises: 
Create Date: 2025-09-01 23:42:22.831184

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5a5a530e6069'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_core',
    sa.Column('upstream_id', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.String(length=11), nullable=True),
    sa.Column('national_code', sa.String(length=10), nullable=True),
    sa.Column('first_name', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=32), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['upstream_id'], ['user_core.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discount',
    sa.Column('seller_user_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=16), nullable=True),
    sa.Column('percent', sa.String(length=16), nullable=True),
    sa.Column('volume', sa.String(length=16), nullable=True),
    sa.Column('expired_dt', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('usage_ceiling', sa.Integer(), nullable=True),
    sa.Column('maximum_discount_amount', sa.String(length=16), nullable=True),
    sa.Column('minimum_purchase_amount', sa.String(length=16), nullable=True),
    sa.Column('number_uses_per_user', sa.String(length=16), nullable=True),
    sa.Column('refund', sa.Boolean(), nullable=True),
    sa.Column('synchronicity', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['seller_user_id'], ['user_core.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase_invoices',
    sa.Column('buyer_user_id', sa.Integer(), nullable=True),
    sa.Column('seller_user_id', sa.Integer(), nullable=True),
    sa.Column('volume', sa.String(length=16), nullable=True),
    sa.Column('create_dt', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('expiration_dt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('WAITING', 'CONFIRMED', 'REJECTED', name='invoicestatus_choices'), server_default=sa.text("'waiting'"), nullable=False),
    sa.Column('base_price', sa.String(length=16), nullable=True),
    sa.Column('discount_amount', sa.String(length=16), nullable=True),
    sa.Column('total_price', sa.String(length=16), nullable=True),
    sa.Column('descriptions', sa.String(), nullable=True),
    sa.Column('config_output', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['buyer_user_id'], ['user_core.id'], ),
    sa.ForeignKeyConstraint(['seller_user_id'], ['user_core.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_auth',
    sa.Column('user_core', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('two_step_verification', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_repres', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_core'], ['user_core.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_auth_user_core'), 'user_auth', ['user_core'], unique=True)
    op.create_table('user_finance',
    sa.Column('user_core', sa.Integer(), nullable=True),
    sa.Column('wallet_balance', sa.Integer(), nullable=True),
    sa.Column('total_volume', sa.String(length=16), nullable=True),
    sa.Column('sales_volume_ceiling', sa.Integer(), nullable=True),
    sa.Column('base_price', sa.String(length=16), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_core'], ['user_core.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_finance_user_core'), 'user_finance', ['user_core'], unique=True)
    op.create_table('user_telegram',
    sa.Column('user_core', sa.Integer(), nullable=True),
    sa.Column('tel_chat_id', sa.String(length=128), nullable=True),
    sa.Column('tel_bot_token', sa.String(length=128), nullable=True),
    sa.Column('tel_channel_id', sa.String(length=128), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_core'], ['user_core.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_telegram_user_core'), 'user_telegram', ['user_core'], unique=True)
    op.create_table('user_discount',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.Column('count_uses', sa.Integer(), nullable=True),
    sa.Column('user_type', sa.Enum('USED_BY_USERS', 'AUTHORIZED_USERS_FOR_USE', name='userdiscounttype_choices'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['discount_id'], ['discount.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_core.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_discount')
    op.drop_index(op.f('ix_user_telegram_user_core'), table_name='user_telegram')
    op.drop_table('user_telegram')
    op.drop_index(op.f('ix_user_finance_user_core'), table_name='user_finance')
    op.drop_table('user_finance')
    op.drop_index(op.f('ix_user_auth_user_core'), table_name='user_auth')
    op.drop_table('user_auth')
    op.drop_table('purchase_invoices')
    op.drop_table('discount')
    op.drop_table('user_core')
    # ### end Alembic commands ###
